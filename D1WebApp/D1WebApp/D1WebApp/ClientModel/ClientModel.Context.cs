//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace D1WebApp.ClientModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClientEntities : DbContext
    {
        public ClientEntities()
            : base("name=ClientEntities")
        {
        }
        public ClientEntities(string ClientEntities) : base(ClientEntities)
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActivityLog> ActivityLogs { get; set; }
        public virtual DbSet<AllImage> AllImages { get; set; }
        public virtual DbSet<businesstype> businesstypes { get; set; }
        public virtual DbSet<CardDetail> CardDetails { get; set; }
        public virtual DbSet<CardType> CardTypes { get; set; }
        public virtual DbSet<ColorConfiguration> ColorConfigurations { get; set; }
        public virtual DbSet<CompanySettingForMulti> CompanySettingForMultis { get; set; }
        public virtual DbSet<Config> Configs { get; set; }
        public virtual DbSet<cu_contact> cu_contact { get; set; }
        public virtual DbSet<cu_prcitem> cu_prcitem { get; set; }
        public virtual DbSet<cu_prospect> cu_prospect { get; set; }
        public virtual DbSet<cu_shipto> cu_shipto { get; set; }
        public virtual DbSet<cu_taxmst> cu_taxmst { get; set; }
        public virtual DbSet<cu_user> cu_user { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<customermethodname> customermethodnames { get; set; }
        public virtual DbSet<DynamicPage> DynamicPages { get; set; }
        public virtual DbSet<EMailTemplate> EMailTemplates { get; set; }
        public virtual DbSet<errorlog> errorlogs { get; set; }
        public virtual DbSet<headerlink> headerlinks { get; set; }
        public virtual DbSet<it_compl> it_compl { get; set; }
        public virtual DbSet<it_component> it_component { get; set; }
        public virtual DbSet<it_majcls> it_majcls { get; set; }
        public virtual DbSet<it_prodline> it_prodline { get; set; }
        public virtual DbSet<it_sales_restriction> it_sales_restriction { get; set; }
        public virtual DbSet<it_tree_link> it_tree_link { get; set; }
        public virtual DbSet<it_tree_node> it_tree_node { get; set; }
        public virtual DbSet<it_xref> it_xref { get; set; }
        public virtual DbSet<item> items { get; set; }
        public virtual DbSet<ItemSummery> ItemSummeries { get; set; }
        public virtual DbSet<MailConfig> MailConfigs { get; set; }
        public virtual DbSet<oe_class> oe_class { get; set; }
        public virtual DbSet<oe_totcodes> oe_totcodes { get; set; }
        public virtual DbSet<ordereditem> ordereditems { get; set; }
        public virtual DbSet<orderhead> orderheads { get; set; }
        public virtual DbSet<ordermethod> ordermethods { get; set; }
        public virtual DbSet<OrderProduct> OrderProducts { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<payment> payments { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<price> prices { get; set; }
        public virtual DbSet<price_sale> price_sale { get; set; }
        public virtual DbSet<PunchoutSessionDetail> PunchoutSessionDetails { get; set; }
        public virtual DbSet<PunchOutTerritory> PunchOutTerritories { get; set; }
        public virtual DbSet<RegistrationControl> RegistrationControls { get; set; }
        public virtual DbSet<safilterorder> safilterorders { get; set; }
        public virtual DbSet<salesman> salesmen { get; set; }
        public virtual DbSet<ship_rates> ship_rates { get; set; }
        public virtual DbSet<shipvia_mapping> shipvia_mapping { get; set; }
        public virtual DbSet<SouthernPunchOutSession> SouthernPunchOutSessions { get; set; }
        public virtual DbSet<state> states { get; set; }
        public virtual DbSet<sy_codes> sy_codes { get; set; }
        public virtual DbSet<sy_company> sy_company { get; set; }
        public virtual DbSet<sy_contact> sy_contact { get; set; }
        public virtual DbSet<sy_country> sy_country { get; set; }
        public virtual DbSet<sy_currency> sy_currency { get; set; }
        public virtual DbSet<sy_default> sy_default { get; set; }
        public virtual DbSet<sy_notes> sy_notes { get; set; }
        public virtual DbSet<sy_numctrl> sy_numctrl { get; set; }
        public virtual DbSet<sy_param> sy_param { get; set; }
        public virtual DbSet<sy_paycodes> sy_paycodes { get; set; }
        public virtual DbSet<sy_postal_code> sy_postal_code { get; set; }
        public virtual DbSet<sy_prof_label> sy_prof_label { get; set; }
        public virtual DbSet<sy_shipvia> sy_shipvia { get; set; }
        public virtual DbSet<sy_terms> sy_terms { get; set; }
        public virtual DbSet<sy_trans_notes> sy_trans_notes { get; set; }
        public virtual DbSet<sy_url_alias> sy_url_alias { get; set; }
        public virtual DbSet<tblBanner> tblBanners { get; set; }
        public virtual DbSet<tblCart> tblCarts { get; set; }
        public virtual DbSet<tblOrder> tblOrders { get; set; }
        public virtual DbSet<tblOrderProduct> tblOrderProducts { get; set; }
        public virtual DbSet<usershippingmapping> usershippingmappings { get; set; }
        public virtual DbSet<ve_contact> ve_contact { get; set; }
        public virtual DbSet<vendor> vendors { get; set; }
        public virtual DbSet<wa_item> wa_item { get; set; }
        public virtual DbSet<warehouse> warehouses { get; set; }
        public virtual DbSet<wishlistheader> wishlistheaders { get; set; }
        public virtual DbSet<wishlistproduct> wishlistproducts { get; set; }
    
        [DbFunction("ClientEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[ClientEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual int AdvanceSerch(string keywords, Nullable<int> keytype, string itemnumbers, string productLines, string treenodes, string customer, Nullable<int> otype, string warehouse, string company_cu, string company_it, Nullable<int> pageno, Nullable<int> pagesize)
        {
            var keywordsParameter = keywords != null ?
                new ObjectParameter("keywords", keywords) :
                new ObjectParameter("keywords", typeof(string));
    
            var keytypeParameter = keytype.HasValue ?
                new ObjectParameter("keytype", keytype) :
                new ObjectParameter("keytype", typeof(int));
    
            var itemnumbersParameter = itemnumbers != null ?
                new ObjectParameter("Itemnumbers", itemnumbers) :
                new ObjectParameter("Itemnumbers", typeof(string));
    
            var productLinesParameter = productLines != null ?
                new ObjectParameter("ProductLines", productLines) :
                new ObjectParameter("ProductLines", typeof(string));
    
            var treenodesParameter = treenodes != null ?
                new ObjectParameter("treenodes", treenodes) :
                new ObjectParameter("treenodes", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var otypeParameter = otype.HasValue ?
                new ObjectParameter("Otype", otype) :
                new ObjectParameter("Otype", typeof(int));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdvanceSerch", keywordsParameter, keytypeParameter, itemnumbersParameter, productLinesParameter, treenodesParameter, customerParameter, otypeParameter, warehouseParameter, company_cuParameter, company_itParameter, pagenoParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<GetBrandListForProductsMenu_Result> GetBrandListForProductsMenu(string warehouse, string customer, string company_it, string company_cu)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrandListForProductsMenu_Result>("GetBrandListForProductsMenu", warehouseParameter, customerParameter, company_itParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<GetcustomerListbySalesman_Result> GetcustomerListbySalesman(string salesman, string company_cu)
        {
            var salesmanParameter = salesman != null ?
                new ObjectParameter("salesman", salesman) :
                new ObjectParameter("salesman", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetcustomerListbySalesman_Result>("GetcustomerListbySalesman", salesmanParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<GetMenuListForDisplay_Result> GetMenuListForDisplay(string warehouse, string treenode, string company_it)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var treenodeParameter = treenode != null ?
                new ObjectParameter("treenode", treenode) :
                new ObjectParameter("treenode", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenuListForDisplay_Result>("GetMenuListForDisplay", warehouseParameter, treenodeParameter, company_itParameter);
        }
    
        public virtual ObjectResult<Gettreenodeforadvancesearch_Result> Gettreenodeforadvancesearch(string company_it)
        {
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Gettreenodeforadvancesearch_Result>("Gettreenodeforadvancesearch", company_itParameter);
        }
    
        public virtual int Insert_cu_prospect_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_cu_prospect_Data", jsondataParameter);
        }
    
        public virtual int Insert_it_compl__Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_compl__Data", jsondataParameter);
        }
    
        public virtual int Insert_it_component_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_component_Data", jsondataParameter);
        }
    
        public virtual int Insert_it_majcls_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_majcls_Data", jsondataParameter);
        }
    
        public virtual int Insert_it_prodline_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_prodline_Data", jsondataParameter);
        }
    
        public virtual int Insert_it_tree_link_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_tree_link_Data", jsondataParameter);
        }
    
        public virtual int Insert_it_tree_node_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_tree_node_Data", jsondataParameter);
        }
    
        public virtual int Insert_it_xref_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_xref_Data", jsondataParameter);
        }
    
        public virtual int Insert_oe_class_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_oe_class_Data", jsondataParameter);
        }
    
        public virtual int Insert_oe_totcodes_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_oe_totcodes_Data", jsondataParameter);
        }
    
        public virtual int Insert_price_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_price_Data", jsondataParameter);
        }
    
        public virtual int Insert_price_sale_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_price_sale_Data", jsondataParameter);
        }
    
        public virtual int Insert_salesman_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_salesman_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_codes_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_codes_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_company_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_company_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_country_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_country_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_currency_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_currency_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_default_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_default_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_numctrl_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_numctrl_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_param_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_param_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_paycodes_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_paycodes_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_postal_code_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_postal_code_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_prof_label_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_prof_label_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_shipvia_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_shipvia_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_States_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_States_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_terms_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_terms_Data", jsondataParameter);
        }
    
        public virtual int Insert_sy_trans_notes_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_trans_notes_Data", jsondataParameter);
        }
    
        public virtual int Insert_ve_contact_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_ve_contact_Data", jsondataParameter);
        }
    
        public virtual int Insert_vendor_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_vendor_Data", jsondataParameter);
        }
    
        public virtual int Insert_wa_item_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_wa_item_Data", jsondataParameter);
        }
    
        public virtual int Insert_warehouse_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_warehouse_Data", jsondataParameter);
        }
    
        public virtual int Insertcu_contactData(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertcu_contactData", jsondataParameter);
        }
    
        public virtual int Insertcu_shiptoData(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertcu_shiptoData", jsondataParameter);
        }
    
        public virtual int InsertcustomerData(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertcustomerData", jsondataParameter);
        }
    
        public virtual int InsertItemImage(string item, string img)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertItemImage", itemParameter, imgParameter);
        }
    
        public virtual int InsertitemrData(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertitemrData", jsondataParameter);
        }
    
        public virtual int InsertTreeNodeImage(string treenode, string img)
        {
            var treenodeParameter = treenode != null ?
                new ObjectParameter("treenode", treenode) :
                new ObjectParameter("treenode", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTreeNodeImage", treenodeParameter, imgParameter);
        }
    
        public virtual ObjectResult<SearchAllTables_Result> SearchAllTables(string words, string warehouse, string customer, Nullable<int> stype, Nullable<int> pageno, Nullable<int> pagesize, string company_it, string company_cu)
        {
            var wordsParameter = words != null ?
                new ObjectParameter("words", words) :
                new ObjectParameter("words", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var stypeParameter = stype.HasValue ?
                new ObjectParameter("stype", stype) :
                new ObjectParameter("stype", typeof(int));
    
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchAllTables_Result>("SearchAllTables", wordsParameter, warehouseParameter, customerParameter, stypeParameter, pagenoParameter, pagesizeParameter, company_itParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<usp_GetCartItems_Result> usp_GetCartItems(string userId, string subuserid, string warehouse, string company_it)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var subuseridParameter = subuserid != null ?
                new ObjectParameter("subuserid", subuserid) :
                new ObjectParameter("subuserid", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCartItems_Result>("usp_GetCartItems", userIdParameter, subuseridParameter, warehouseParameter, company_itParameter);
        }
    
        public virtual ObjectResult<usp_GetBrandList_Result> usp_GetBrandList(string warehouse, string customer, string company_it, string company_cu)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBrandList_Result>("usp_GetBrandList", warehouseParameter, customerParameter, company_itParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<usp_GetBrandProductWithItemCount_Result> usp_GetBrandProductWithItemCount(string majClass, string warehouse, string company_it)
        {
            var majClassParameter = majClass != null ?
                new ObjectParameter("MajClass", majClass) :
                new ObjectParameter("MajClass", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBrandProductWithItemCount_Result>("usp_GetBrandProductWithItemCount", majClassParameter, warehouseParameter, company_itParameter);
        }
    
        public virtual int ClearAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearAllTables");
        }
    
        public virtual int Insert_sy_contact_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_sy_contact_Data", jsondataParameter);
        }
    
        public virtual int DeleteExtraRows()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteExtraRows");
        }
    
        public virtual ObjectResult<GetMenuListForDisplaynew_Result> GetMenuListForDisplaynew(string warehouse, string treenode, string company_it)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var treenodeParameter = treenode != null ?
                new ObjectParameter("treenode", treenode) :
                new ObjectParameter("treenode", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenuListForDisplaynew_Result>("GetMenuListForDisplaynew", warehouseParameter, treenodeParameter, company_itParameter);
        }
    
        public virtual ObjectResult<SP_GetProductListsToDisplay_Result> SP_GetProductListsToDisplay(string menuname, string brandProduct, Nullable<int> pageno, Nullable<int> pagesize, string warehouse, string customer, Nullable<int> stype, string companyit, string companycu, string satagsdetails)
        {
            var menunameParameter = menuname != null ?
                new ObjectParameter("Menuname", menuname) :
                new ObjectParameter("Menuname", typeof(string));
    
            var brandProductParameter = brandProduct != null ?
                new ObjectParameter("BrandProduct", brandProduct) :
                new ObjectParameter("BrandProduct", typeof(string));
    
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var stypeParameter = stype.HasValue ?
                new ObjectParameter("stype", stype) :
                new ObjectParameter("stype", typeof(int));
    
            var companyitParameter = companyit != null ?
                new ObjectParameter("companyit", companyit) :
                new ObjectParameter("companyit", typeof(string));
    
            var companycuParameter = companycu != null ?
                new ObjectParameter("companycu", companycu) :
                new ObjectParameter("companycu", typeof(string));
    
            var satagsdetailsParameter = satagsdetails != null ?
                new ObjectParameter("satagsdetails", satagsdetails) :
                new ObjectParameter("satagsdetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProductListsToDisplay_Result>("SP_GetProductListsToDisplay", menunameParameter, brandProductParameter, pagenoParameter, pagesizeParameter, warehouseParameter, customerParameter, stypeParameter, companyitParameter, companycuParameter, satagsdetailsParameter);
        }
    
        public virtual ObjectResult<string> GetSitemapdata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSitemapdata");
        }
    
        public virtual ObjectResult<GetitemdetailsbyName_Result> GetitemdetailsbyName(string itemName, string warehouse, string customer, string company_cu, string company_it)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetitemdetailsbyName_Result>("GetitemdetailsbyName", itemNameParameter, warehouseParameter, customerParameter, company_cuParameter, company_itParameter);
        }
    
        public virtual ObjectResult<string> GetItemlistforimageProcess(Nullable<int> pageno, Nullable<int> pagesize)
        {
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetItemlistforimageProcess", pagenoParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<string> GetittreenodelistforimageProcess(Nullable<int> pageno, Nullable<int> pagesize)
        {
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetittreenodelistforimageProcess", pagenoParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<string> GetmajclasslistforimageProcess(Nullable<int> pageno, Nullable<int> pagesize)
        {
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetmajclasslistforimageProcess", pagenoParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<string> GetproductlinelistforimageProcess(Nullable<int> pageno, Nullable<int> pagesize)
        {
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetproductlinelistforimageProcess", pagenoParameter, pagesizeParameter);
        }
    
        public virtual int Insert_AllImages_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_AllImages_Data", jsondataParameter);
        }
    
        public virtual int Insert_AllImages_Data_Change(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_AllImages_Data_Change", jsondataParameter);
        }
    
        public virtual int Insert_it_sales_restriction_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_it_sales_restriction_Data", jsondataParameter);
        }
    
        public virtual int SetOtherImages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetOtherImages");
        }
    
        public virtual int Createunpivotforproductlisting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Createunpivotforproductlisting");
        }
    
        public virtual ObjectResult<Getmaj_class_details_for_list_page_Result> Getmaj_class_details_for_list_page(string majClass, string company_it)
        {
            var majClassParameter = majClass != null ?
                new ObjectParameter("MajClass", majClass) :
                new ObjectParameter("MajClass", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getmaj_class_details_for_list_page_Result>("Getmaj_class_details_for_list_page", majClassParameter, company_itParameter);
        }
    
        public virtual ObjectResult<Getprodlines_details_for_list_page_Result> Getprodlines_details_for_list_page(string prod_line, string company_it)
        {
            var prod_lineParameter = prod_line != null ?
                new ObjectParameter("prod_line", prod_line) :
                new ObjectParameter("prod_line", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getprodlines_details_for_list_page_Result>("Getprodlines_details_for_list_page", prod_lineParameter, company_itParameter);
        }
    
        public virtual ObjectResult<GetTreenode_details_for_list_page_Result> GetTreenode_details_for_list_page(string treenode, string company_it)
        {
            var treenodeParameter = treenode != null ?
                new ObjectParameter("treenode", treenode) :
                new ObjectParameter("treenode", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTreenode_details_for_list_page_Result>("GetTreenode_details_for_list_page", treenodeParameter, company_itParameter);
        }
    
        public virtual int Insert_cu_taxmst_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_cu_taxmst_Data", jsondataParameter);
        }
    
        public virtual int sp_Get_sa_Lables_Filter(string maj_class, string prodline, string treenode, string satagsdetails, string words, string warehouse, string customer, string company_it, string company_cu)
        {
            var maj_classParameter = maj_class != null ?
                new ObjectParameter("maj_class", maj_class) :
                new ObjectParameter("maj_class", typeof(string));
    
            var prodlineParameter = prodline != null ?
                new ObjectParameter("prodline", prodline) :
                new ObjectParameter("prodline", typeof(string));
    
            var treenodeParameter = treenode != null ?
                new ObjectParameter("treenode", treenode) :
                new ObjectParameter("treenode", typeof(string));
    
            var satagsdetailsParameter = satagsdetails != null ?
                new ObjectParameter("satagsdetails", satagsdetails) :
                new ObjectParameter("satagsdetails", typeof(string));
    
            var wordsParameter = words != null ?
                new ObjectParameter("words", words) :
                new ObjectParameter("words", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Get_sa_Lables_Filter", maj_classParameter, prodlineParameter, treenodeParameter, satagsdetailsParameter, wordsParameter, warehouseParameter, customerParameter, company_itParameter, company_cuParameter);
        }
    
        public virtual int SP_GetProductListsToDisplayCount(string menuname, string brandProduct, string warehouse, string customer, string companyit, string companycu, string satagsdetails)
        {
            var menunameParameter = menuname != null ?
                new ObjectParameter("Menuname", menuname) :
                new ObjectParameter("Menuname", typeof(string));
    
            var brandProductParameter = brandProduct != null ?
                new ObjectParameter("BrandProduct", brandProduct) :
                new ObjectParameter("BrandProduct", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var companyitParameter = companyit != null ?
                new ObjectParameter("companyit", companyit) :
                new ObjectParameter("companyit", typeof(string));
    
            var companycuParameter = companycu != null ?
                new ObjectParameter("companycu", companycu) :
                new ObjectParameter("companycu", typeof(string));
    
            var satagsdetailsParameter = satagsdetails != null ?
                new ObjectParameter("satagsdetails", satagsdetails) :
                new ObjectParameter("satagsdetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetProductListsToDisplayCount", menunameParameter, brandProductParameter, warehouseParameter, customerParameter, companyitParameter, companycuParameter, satagsdetailsParameter);
        }
    
        public virtual int createatreetable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createatreetable");
        }
    
        public virtual int CreatenewItemSummery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatenewItemSummery");
        }
    
        public virtual ObjectResult<GetAllRealtedItems_Result> GetAllRealtedItems(string item, string warehouse, string company)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRealtedItems_Result>("GetAllRealtedItems", itemParameter, warehouseParameter, companyParameter);
        }
    
        public virtual ObjectResult<GetitemdetailsbyID_Result> GetitemdetailsbyID(string itemName, string warehouse, string customer, string company_cu, string company_it)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetitemdetailsbyID_Result>("GetitemdetailsbyID", itemNameParameter, warehouseParameter, customerParameter, company_cuParameter, company_itParameter);
        }
    
        public virtual int Insert_ItemSummery__Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_ItemSummery__Data", jsondataParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SearchAllTablesCounts(string words, string warehouse, string customer, string company_it, string company_cu)
        {
            var wordsParameter = words != null ?
                new ObjectParameter("words", words) :
                new ObjectParameter("words", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SearchAllTablesCounts", wordsParameter, warehouseParameter, customerParameter, company_itParameter, company_cuParameter);
        }
    
        public virtual int DeleteCuUserShipMapping(string userid, string shipid, string customer, string company_cu)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var shipidParameter = shipid != null ?
                new ObjectParameter("shipid", shipid) :
                new ObjectParameter("shipid", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("Company_cu", company_cu) :
                new ObjectParameter("Company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCuUserShipMapping", useridParameter, shipidParameter, customerParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<GetitemdetailsbyNameForXref_Result> GetitemdetailsbyNameForXref(string itemName, string warehouse, string customer, string company_cu, string company_it)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetitemdetailsbyNameForXref_Result>("GetitemdetailsbyNameForXref", itemNameParameter, warehouseParameter, customerParameter, company_cuParameter, company_itParameter);
        }
    
        public virtual int InsertCuUserShipMapping(string userid, string shipid, string customer, string company_cu)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var shipidParameter = shipid != null ?
                new ObjectParameter("shipid", shipid) :
                new ObjectParameter("shipid", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("Company_cu", company_cu) :
                new ObjectParameter("Company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCuUserShipMapping", useridParameter, shipidParameter, customerParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<usp_GetCUuserList_Result> usp_GetCUuserList(string customer, string company, string column, string condition, string value, string pageNumber, string rowsOfPage)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var columnParameter = column != null ?
                new ObjectParameter("column", column) :
                new ObjectParameter("column", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowsOfPageParameter = rowsOfPage != null ?
                new ObjectParameter("RowsOfPage", rowsOfPage) :
                new ObjectParameter("RowsOfPage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCUuserList_Result>("usp_GetCUuserList", customerParameter, companyParameter, columnParameter, conditionParameter, valueParameter, pageNumberParameter, rowsOfPageParameter);
        }
    
        public virtual ObjectResult<usp_GetHelpDeskFilterData_Result> usp_GetHelpDeskFilterData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHelpDeskFilterData_Result>("usp_GetHelpDeskFilterData");
        }
    
        public virtual int AdvanceSerchcount(string keywords, Nullable<int> keytype, string itemnumbers, string productLines, string treenodes, string customer, string warehouse, string company_cu, string company_it)
        {
            var keywordsParameter = keywords != null ?
                new ObjectParameter("keywords", keywords) :
                new ObjectParameter("keywords", typeof(string));
    
            var keytypeParameter = keytype.HasValue ?
                new ObjectParameter("keytype", keytype) :
                new ObjectParameter("keytype", typeof(int));
    
            var itemnumbersParameter = itemnumbers != null ?
                new ObjectParameter("Itemnumbers", itemnumbers) :
                new ObjectParameter("Itemnumbers", typeof(string));
    
            var productLinesParameter = productLines != null ?
                new ObjectParameter("ProductLines", productLines) :
                new ObjectParameter("ProductLines", typeof(string));
    
            var treenodesParameter = treenodes != null ?
                new ObjectParameter("treenodes", treenodes) :
                new ObjectParameter("treenodes", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdvanceSerchcount", keywordsParameter, keytypeParameter, itemnumbersParameter, productLinesParameter, treenodesParameter, customerParameter, warehouseParameter, company_cuParameter, company_itParameter);
        }
    
        public virtual ObjectResult<string> createvalidateurlfile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("createvalidateurlfile");
        }
    
        public virtual int GetChildItems(string itemName, string warehouse, string customer, string company_cu, string company_it)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChildItems", itemNameParameter, warehouseParameter, customerParameter, company_cuParameter, company_itParameter);
        }
    
        public virtual ObjectResult<GetUrlsforvisiblesitemap_Result> GetUrlsforvisiblesitemap()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUrlsforvisiblesitemap_Result>("GetUrlsforvisiblesitemap");
        }
    
        public virtual ObjectResult<GetUserDefaultvalues_Result> GetUserDefaultvalues(string userId, string subuserid, string userType, string company_cu)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var subuseridParameter = subuserid != null ?
                new ObjectParameter("subuserid", subuserid) :
                new ObjectParameter("subuserid", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDefaultvalues_Result>("GetUserDefaultvalues", userIdParameter, subuseridParameter, userTypeParameter, company_cuParameter);
        }
    
        public virtual int removesfromend(string @string)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removesfromend", stringParameter);
        }
    
        public virtual ObjectResult<GetActivityLog_Result> GetActivityLog(string logtype, string searchkeyword, string custid, string subuserid, string clientip, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var logtypeParameter = logtype != null ?
                new ObjectParameter("logtype", logtype) :
                new ObjectParameter("logtype", typeof(string));
    
            var searchkeywordParameter = searchkeyword != null ?
                new ObjectParameter("searchkeyword", searchkeyword) :
                new ObjectParameter("searchkeyword", typeof(string));
    
            var custidParameter = custid != null ?
                new ObjectParameter("custid", custid) :
                new ObjectParameter("custid", typeof(string));
    
            var subuseridParameter = subuserid != null ?
                new ObjectParameter("subuserid", subuserid) :
                new ObjectParameter("subuserid", typeof(string));
    
            var clientipParameter = clientip != null ?
                new ObjectParameter("clientip", clientip) :
                new ObjectParameter("clientip", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActivityLog_Result>("GetActivityLog", logtypeParameter, searchkeywordParameter, custidParameter, subuseridParameter, clientipParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int GetMenuListForDisplayfornewtheme(string warehouse, string company_it)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMenuListForDisplayfornewtheme", warehouseParameter, company_itParameter);
        }
    
        public virtual int Insert_cu_prcitem_Data(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_cu_prcitem_Data", jsondataParameter);
        }
    
        public virtual int SearchAllTablesforheader(string words, string warehouse, string customer, Nullable<int> stype, Nullable<int> pageno, Nullable<int> pagesize, string company_it, string company_cu)
        {
            var wordsParameter = words != null ?
                new ObjectParameter("words", words) :
                new ObjectParameter("words", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var stypeParameter = stype.HasValue ?
                new ObjectParameter("stype", stype) :
                new ObjectParameter("stype", typeof(int));
    
            var pagenoParameter = pageno.HasValue ?
                new ObjectParameter("pageno", pageno) :
                new ObjectParameter("pageno", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var company_itParameter = company_it != null ?
                new ObjectParameter("company_it", company_it) :
                new ObjectParameter("company_it", typeof(string));
    
            var company_cuParameter = company_cu != null ?
                new ObjectParameter("company_cu", company_cu) :
                new ObjectParameter("company_cu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTablesforheader", wordsParameter, warehouseParameter, customerParameter, stypeParameter, pagenoParameter, pagesizeParameter, company_itParameter, company_cuParameter);
        }
    
        public virtual ObjectResult<usp_GetTerritoryAccount_Result> usp_GetTerritoryAccount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTerritoryAccount_Result>("usp_GetTerritoryAccount");
        }
    
        public virtual int usp_UpdateCartItems(string sessionID, string userID, string subuserid)
        {
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var subuseridParameter = subuserid != null ?
                new ObjectParameter("subuserid", subuserid) :
                new ObjectParameter("subuserid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateCartItems", sessionIDParameter, userIDParameter, subuseridParameter);
        }
    }
}
